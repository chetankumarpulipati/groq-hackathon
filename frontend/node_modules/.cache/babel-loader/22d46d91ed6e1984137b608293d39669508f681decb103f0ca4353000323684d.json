{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\groq-hackathon\\\\frontend\\\\src\\\\components\\\\ModelAccuracy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent, Typography, Box, Button, LinearProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Chip } from '@mui/material';\nimport { Assessment, Refresh, TrendingUp, CheckCircle } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:8001';\nfunction ModelAccuracy() {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchAccuracyMetrics();\n  }, []);\n  const fetchAccuracyMetrics = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get(`${API_BASE}/accuracy/metrics`);\n      setMetrics(response.data);\n    } catch (error) {\n      setError('Failed to fetch accuracy metrics');\n      console.error('Accuracy fetch error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const runAccuracyTest = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.post(`${API_BASE}/accuracy/evaluate`);\n      setMetrics(response.data);\n    } catch (error) {\n      setError('Failed to run accuracy evaluation');\n      console.error('Accuracy test error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getAccuracyColor = accuracy => {\n    if (accuracy >= 0.9) return '#4caf50';\n    if (accuracy >= 0.8) return '#ff9800';\n    return '#f44336';\n  };\n  const getAccuracyLabel = accuracy => {\n    if (accuracy >= 0.9) return 'Excellent';\n    if (accuracy >= 0.8) return 'Good';\n    if (accuracy >= 0.7) return 'Fair';\n    return 'Needs Improvement';\n  };\n  if (loading && !metrics) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Model Accuracy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2,\n          textAlign: 'center'\n        },\n        children: \"Loading accuracy metrics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"AI Model Accuracy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Accuracy Evaluation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: runAccuracyTest,\n            disabled: loading,\n            startIcon: /*#__PURE__*/_jsxDEV(Assessment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 26\n            }, this),\n            children: \"Run Accuracy Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: fetchAccuracyMetrics,\n            disabled: loading,\n            startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 26\n            }, this),\n            children: \"Refresh Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n            sx: {\n              flexGrow: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), metrics && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"h6\",\n                children: \"Overall Accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  color: getAccuracyColor(metrics.overall_accuracy),\n                  fontWeight: 'bold'\n                },\n                children: [(metrics.overall_accuracy * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: getAccuracyLabel(metrics.overall_accuracy),\n                color: metrics.overall_accuracy >= 0.8 ? 'success' : 'warning',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"h6\",\n                children: \"Total Test Cases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: metrics.total_cases\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Evaluated samples\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"h6\",\n                children: \"Correct Predictions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  color: '#4caf50',\n                  fontWeight: 'bold'\n                },\n                children: metrics.correct_predictions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Out of \", metrics.total_cases]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), metrics.model_accuracies && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Model Performance Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Model\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Accuracy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Test Cases\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: Object.entries(metrics.model_accuracies).map(([model, data]) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: model\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        color: getAccuracyColor(data.accuracy)\n                      },\n                      children: [(data.accuracy * 100).toFixed(1), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: data.cases\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getAccuracyLabel(data.accuracy),\n                      color: data.accuracy >= 0.8 ? 'success' : 'warning',\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 27\n                  }, this)]\n                }, model, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Test Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Last Evaluation: \", new Date().toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Test Duration: \", metrics.test_duration || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Average Confidence: \", metrics.avg_confidence ? (metrics.avg_confidence * 100).toFixed(1) + '%' : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Benchmark Status:\", /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Active\",\n                  color: \"success\",\n                  size: \"small\",\n                  icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 29\n                  }, this),\n                  sx: {\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelAccuracy, \"XZbloPF4yNO1CDTF6f6WCJa2Jq0=\");\n_c = ModelAccuracy;\nexport default ModelAccuracy;\nvar _c;\n$RefreshReg$(_c, \"ModelAccuracy\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Button","LinearProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","Assessment","Refresh","TrendingUp","CheckCircle","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","ModelAccuracy","_s","metrics","setMetrics","loading","setLoading","error","setError","fetchAccuracyMetrics","response","get","data","console","runAccuracyTest","post","getAccuracyColor","accuracy","getAccuracyLabel","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","textAlign","mb","display","gap","alignItems","onClick","disabled","startIcon","flexGrow","severity","container","spacing","item","xs","md","color","overall_accuracy","fontWeight","toFixed","label","size","total_cases","correct_predictions","model_accuracies","component","align","Object","entries","map","model","scope","cases","Date","toLocaleString","test_duration","avg_confidence","icon","ml","_c","$RefreshReg$"],"sources":["D:/Projects/groq-hackathon/frontend/src/components/ModelAccuracy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid, Card, CardContent, Typography, Box, Button,\r\n  LinearProgress, Alert, Table, TableBody, TableCell,\r\n  TableContainer, TableHead, TableRow, Paper, Chip\r\n} from '@mui/material';\r\nimport {\r\n  Assessment, Refresh, TrendingUp, CheckCircle\r\n} from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = 'http://localhost:8001';\r\n\r\nfunction ModelAccuracy() {\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAccuracyMetrics();\r\n  }, []);\r\n\r\n  const fetchAccuracyMetrics = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/accuracy/metrics`);\r\n      setMetrics(response.data);\r\n    } catch (error) {\r\n      setError('Failed to fetch accuracy metrics');\r\n      console.error('Accuracy fetch error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const runAccuracyTest = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE}/accuracy/evaluate`);\r\n      setMetrics(response.data);\r\n    } catch (error) {\r\n      setError('Failed to run accuracy evaluation');\r\n      console.error('Accuracy test error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getAccuracyColor = (accuracy) => {\r\n    if (accuracy >= 0.9) return '#4caf50';\r\n    if (accuracy >= 0.8) return '#ff9800';\r\n    return '#f44336';\r\n  };\r\n\r\n  const getAccuracyLabel = (accuracy) => {\r\n    if (accuracy >= 0.9) return 'Excellent';\r\n    if (accuracy >= 0.8) return 'Good';\r\n    if (accuracy >= 0.7) return 'Fair';\r\n    return 'Needs Improvement';\r\n  };\r\n\r\n  if (loading && !metrics) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Model Accuracy\r\n        </Typography>\r\n        <LinearProgress />\r\n        <Typography variant=\"body1\" sx={{ mt: 2, textAlign: 'center' }}>\r\n          Loading accuracy metrics...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        AI Model Accuracy\r\n      </Typography>\r\n\r\n      {/* Controls */}\r\n      <Card sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Accuracy Evaluation\r\n          </Typography>\r\n          <Box display=\"flex\" gap={2} alignItems=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={runAccuracyTest}\r\n              disabled={loading}\r\n              startIcon={<Assessment />}\r\n            >\r\n              Run Accuracy Test\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={fetchAccuracyMetrics}\r\n              disabled={loading}\r\n              startIcon={<Refresh />}\r\n            >\r\n              Refresh Metrics\r\n            </Button>\r\n            {loading && <LinearProgress sx={{ flexGrow: 1 }} />}\r\n          </Box>\r\n\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Overall Metrics */}\r\n      {metrics && (\r\n        <>\r\n          <Grid container spacing={3} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    Overall Accuracy\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"h3\"\r\n                    sx={{ color: getAccuracyColor(metrics.overall_accuracy), fontWeight: 'bold' }}\r\n                  >\r\n                    {(metrics.overall_accuracy * 100).toFixed(1)}%\r\n                  </Typography>\r\n                  <Chip\r\n                    label={getAccuracyLabel(metrics.overall_accuracy)}\r\n                    color={metrics.overall_accuracy >= 0.8 ? 'success' : 'warning'}\r\n                    size=\"small\"\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    Total Test Cases\r\n                  </Typography>\r\n                  <Typography variant=\"h3\" sx={{ fontWeight: 'bold' }}>\r\n                    {metrics.total_cases}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Evaluated samples\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    Correct Predictions\r\n                  </Typography>\r\n                  <Typography variant=\"h3\" sx={{ color: '#4caf50', fontWeight: 'bold' }}>\r\n                    {metrics.correct_predictions}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Out of {metrics.total_cases}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Model-specific Accuracy */}\r\n          {metrics.model_accuracies && (\r\n            <Card sx={{ mb: 4 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Model Performance Breakdown\r\n                </Typography>\r\n                <TableContainer component={Paper} variant=\"outlined\">\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Model</TableCell>\r\n                        <TableCell align=\"right\">Accuracy</TableCell>\r\n                        <TableCell align=\"right\">Test Cases</TableCell>\r\n                        <TableCell align=\"center\">Status</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {Object.entries(metrics.model_accuracies).map(([model, data]) => (\r\n                        <TableRow key={model}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {model}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <Typography sx={{ color: getAccuracyColor(data.accuracy) }}>\r\n                              {(data.accuracy * 100).toFixed(1)}%\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{data.cases}</TableCell>\r\n                          <TableCell align=\"center\">\r\n                            <Chip\r\n                              label={getAccuracyLabel(data.accuracy)}\r\n                              color={data.accuracy >= 0.8 ? 'success' : 'warning'}\r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n\r\n          {/* Test Results Summary */}\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Test Summary\r\n              </Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Last Evaluation: {new Date().toLocaleString()}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Test Duration: {metrics.test_duration || 'N/A'}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Average Confidence: {metrics.avg_confidence ? (metrics.avg_confidence * 100).toFixed(1) + '%' : 'N/A'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Benchmark Status:\r\n                    <Chip\r\n                      label=\"Active\"\r\n                      color=\"success\"\r\n                      size=\"small\"\r\n                      icon={<CheckCircle />}\r\n                      sx={{ ml: 1 }}\r\n                    />\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ModelAccuracy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}